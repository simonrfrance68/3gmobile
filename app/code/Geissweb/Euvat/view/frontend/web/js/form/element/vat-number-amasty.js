/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @package     Geissweb_Euvat
 * @copyright   Copyright (c) 2015-2019 GEISS Webl√∂sungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

define([
    'jquery',
    'Geissweb_Euvat/js/form/element/vat-number-co',
    'Geissweb_Euvat/js/queue',
    'Magento_Checkout/js/model/quote',
    'Magento_Checkout/js/action/set-shipping-information'
], function ($, VatNumberCo, queue, Quote, setShippingInfoAction) {
    'use strict';

    return VatNumberCo.extend({

        addToQuoteAddress: function (address) {
            var self = this;
            if ( (typeof(address.vatId) === 'string'
                && address.vatId.length <= 0)
                || address.vatId === null
                && self.value() !== null
            ) {
                if (this.debug) {
                    console.log("Assigning address VAT number "+self.value());
                }
                address.vatId = self.value();
            } else if (self.value() === "" || self.value() === null) {
                if (this.debug) {
                    console.log("Removing address VAT number");
                }
                address.vatId = "";
            }
        },

        afterValidation: function (jqXHR) {
            var self = this;
            var shippingAddress = Quote.shippingAddress();
            var billingAddress = Quote.billingAddress();
            if (this.debug) {
                console.log(shippingAddress);
                console.log(billingAddress);
            }

            queue.addFunction(function () {
                if (typeof(self.dataScope) === 'string') {
                    if (self.dataScope === 'shippingAddress.vat_id') {
                        self.addToQuoteAddress(shippingAddress);
                    } else if (self.dataScope === 'billingAddress.vat_id') {
                        self.addToQuoteAddress(billingAddress);
                    }
                }
            }).addFunction(function () {
                var deferred = new $.Deferred();
                if (self.countryCode.length > 0) {
                    $('body').trigger('processStop');
                    return self.updateCountry(self.countryCode, deferred);
                }
            }).addFunction(function () {
                setShippingInfoAction();
            });

            return queue.run();
        }

    });
});