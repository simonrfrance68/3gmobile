<?php
/**
 * Copyright © MageWorx. All rights reserved.
 * See LICENSE.txt for license details.
 */

namespace MageWorx\SeoRedirects\Api\Data;

use Magento\Framework\Exception\LocalizedException;

/**
 * @api
 */
interface CustomRedirectInterface
{
    /**
     * Constants for keys of data array. Identical to the name of the getter in snake case
     */
    public const REDIRECT_ID               = 'redirect_id';
    public const REDIRECT_CODE             = 'redirect_code';
    public const REQUEST_ENTITY_TYPE       = 'request_entity_type';
    public const TARGET_ENTITY_TYPE        = 'target_entity_type';
    public const REQUEST_ENTITY_IDENTIFIER = 'request_entity_identifier';
    public const TARGET_ENTITY_IDENTIFIER  = 'target_entity_identifier';
    public const STORE_ID                  = 'store_id';
    public const DATE_CREATED              = 'date_created';
    public const DATE_MODIFIED             = 'date_modified';
    public const IS_AUTOGENERATED          = 'is_autogenerated';
    public const IS_IMPORTED               = 'is_imported';
    public const STATUS                    = 'status';
    public const START_AT                  = 'start_at';
    public const FINISH_AT                 = 'finish_at';

    /**
     * Types of redirect. Must be minimal
     */
    public const REDIRECT_TYPE_CUSTOM      = 1;
    public const REDIRECT_TYPE_PRODUCT     = 2;
    public const REDIRECT_TYPE_CATEGORY    = 3;
    public const REDIRECT_TYPE_PAGE        = 4;
    public const REDIRECT_TYPE_LANDINGPAGE = 5;

    /**
     * Get Redirect ID
     *
     * @return int|null
     */
    public function getId(): ?int;

    /**
     * @return string
     */
    public function getRedirectCode(): string;

    /**
     * Get Request Entity Type
     *
     * @return int
     */
    public function getRequestEntityType(): int;

    /**
     * Get Target Entity Type
     *
     * @return int
     */
    public function getTargetEntityType(): int;

    /**
     * Get Request Entity Identifier
     *
     * @return string
     * @throws LocalizedException
     */
    public function getRequestEntityIdentifier(): string;

    /**
     * Get Target Entity Identifier
     *
     * @return string
     * @throws LocalizedException
     */
    public function getTargetEntityIdentifier(): string;

    /**
     * Get Redirect Store ID
     *
     * @return int
     */
    public function getStoreId(): int;

    /**
     * Get Redirect Data Created
     *
     * @return string
     */
    public function getDateCreated(): string;

    /**
     * Get Redirect Data Modified
     *
     * @return string
     */
    public function getDateModified(): string;

    /**
     * Check if redirect is autogenereated
     *
     * @return bool
     */
    public function getIsAutogenerated(): bool;

    /**
     * Check if redirect is imported
     *
     * @return bool
     */
    public function getIsImported(): bool;

    /**
     * Get Status
     *
     * @return int
     */
    public function getStatus(): int;

    /**
     * Get Redirect Active From
     *
     * @return string|null
     */
    public function getStartAt(): ?string;

    /**
     * Get Redirect Active To
     *
     * @return string|null
     */
    public function getFinishAt(): ?string;

    /**
     * Set Redirect ID
     *
     * @param int $id
     * @return CustomRedirectInterface
     */
    public function setId($id): CustomRedirectInterface;

    /**
     * @param int $code
     * @return CustomRedirectInterface
     */
    public function setRedirectCode(int $code): CustomRedirectInterface;

    /**
     * Set Request Entity Type
     *
     * @param int $type
     * @return CustomRedirectInterface
     */
    public function setRequestEntityType(int $type): CustomRedirectInterface;

    /**
     * Set Target Entity Type
     *
     * @param int $type
     * @return CustomRedirectInterface
     */
    public function setTargetEntityType(int $type): CustomRedirectInterface;

    /**
     * Set Request Entity Identifier
     *
     * @param string $identifier
     * @return CustomRedirectInterface
     */
    public function setRequestEntityIdentifier(string $identifier): CustomRedirectInterface;

    /**
     * Set Target Entity Identifier
     *
     * @param string $identifier
     * @return CustomRedirectInterface
     */
    public function setTargetEntityIdentifier(string $identifier): CustomRedirectInterface;

    /**
     * Set Redirect Store ID
     *
     * @param int $storeId
     * @return CustomRedirectInterface
     */
    public function setStoreId(int $storeId): CustomRedirectInterface;

    /**
     * Set Redirect Data Created
     *
     * @param string $date
     * @return CustomRedirectInterface
     */
    public function setDateCreated(string $date): CustomRedirectInterface;

    /**
     * Set Redirect Data Modified
     *
     * @param string $date
     * @return CustomRedirectInterface
     */
    public function setDateModified(string $date): CustomRedirectInterface;

    /**
     * Set that redirect is autogenereated
     *
     * @param bool $isAutogenerated
     * @return CustomRedirectInterface
     */
    public function setIsAutogenerated(bool $isAutogenerated): CustomRedirectInterface;

    /**
     * Set that redirect is imported
     *
     * @param bool $isImported
     * @return CustomRedirectInterface
     */
    public function setIsImported(bool $isImported): CustomRedirectInterface;

    /**
     * Set Redirect Status
     *
     * @param int $statusCode
     * @return CustomRedirectInterface
     */
    public function setStatus(int $statusCode): CustomRedirectInterface;

    /**
     * Set Active From
     *
     * @param string|null $time
     * @return CustomRedirectInterface
     */
    public function setStartAt(?string $time): CustomRedirectInterface;

    /**
     * Set Active To
     *
     * @param string|null $time
     * @return CustomRedirectInterface
     */
    public function setFinishAt(?string $time): CustomRedirectInterface;

    /**
     * Default values as array for new redirect
     *
     * @return array
     */
    public function getDefaultValues(): array;
}
